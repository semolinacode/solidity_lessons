// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

contract MyShop {
    
    // для переменных public автоматически создается ридер
    address public owner;
    // mapping - словарь. Ключами будут типы данных address, а значениями целые числа без знака
    mapping (address => uint) public payments;

    constructor() {
        // msg - глобальный объект - транзакция, которая была получена этой функцией
        // msg.sender - адрес отправителя
        // контракт деплоит создатель, поэтому в поле sender будет адрес создателя
        // такие данные будут сохранены в БЛОКЧЕЙН
        owner = msg.sender;
    }

    // payable - модификатор, который указывает на то, что функция МОЖЕТ ПРИНИМАТЬ ДЕНЬГИ
    // если в функцию без payable отправить деньги,  она деньги вернет отправителю и транзакция будет откачена с ошибкой
    function payForItem() public payable {
        // в теле функции можно ничего не писать 
        // так как из-за модификатора payable EVM автоматически обработает пришедшие денежные средства и зачислит на счет контракта
        // таким образом, зачисление и снятие денег с контракта производятся автоматически

         // сохраним информацию о том, кто отправил деньги в контракт
        // msg.value - сколько прислали в контракт
        // (будет перезаписано, если 1 отправитель отправит несколько сумм)
        payments[msg.sender] = msg.value;
    }

    function withdrawAll() public  {
        // transfer - метод, который есть у переменных типа address и позволяют переводить деньги
        // owner.transfer(); - так сделать не можем так как owner не является payable
        // это можно решить - привести переменную owner к payable
        // переменная _to в блокчейне не сохранится
        // за хранение в блокчейне надо платить (за хранение в памяти платить надо меньше)
        address payable _to = payable(owner);

        // к контракту можно обратиться из контракта с помощью this
        // получаем адрес контракта:
        address _thisContract = address(this);

        // у каждого адреса мы можем посмотреть баланс с помощью .balance
        // сейчас мы переведем все деньги с контракта на адрес овнера
        _to.transfer(_thisContract.balance);
    }
}
